	$word	32
	$byte	 8
	$quantum 8
	$awidth	32:64

p	$proc
"$map"*	$name

p	$proc
word*	$name
parts	$set	p(1,1:)
"$data"	$set,$binary	p(1,1:parts)
part	$do	parts-1,	relocate	p(1, 1:part)
	$load,$bits	$data
	$end

p	$proc
relocate* $name


label1	$pushrel	p(1,1)


	$if	$t(label1)=$equf
v	$set	label1

bits	$set	label1\2
scale	$set	label1\3
offset	$set	label1\4
descant	$set	label1\5

limit	$set	1*/bits
mask	$set	limit-1
unmask	$set	^(mask*/scale)


        $if     (bits=24)**(($data**2)=0)**(descant=-2)
	$if	$rel
        $if	$a=0
	$flag	relative jump from relocatable to absolute
	$endif
	$endif

field   $set    v+offset-$b
        $info,$offset   field
"$data"* $set   ($data**0FC000003)++(field**03FFFFFC)

        $else


field	$set	v+(($data/*scale)**mask)

	$do	descant<0,;
field	$set	(v+offset)/*(-descant)


field	$set	field**mask
"$data"* $set	(field*/scale)++($data**unmask)

	$endif
	$endif
	$end

index	$do	p(),	word	p(index, 1)
	$end

